#!/bin/bash
#
# #################################################################
#
# Written to be used on 64 bits computers
# Author            : Erik Dubois
# Website           : http://www.erikdubois.be
#
# Modified by       : TheGreatYellow67 (TgY67)
# Version           : v1
# Start date        : 09/02/2017
# Last modified date: 19/08/2017
#
# #################################################################

###################################################################
#
#   DO NOT JUST RUN THIS. EXAMINE AND JUDGE. RUN AT YOUR OWN RISK.
#
###################################################################

# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer.

ask() {
    # http://djm.me/ask
    local prompt default REPLY

    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read REPLY </dev/tty

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

# #################################################################

LAUNCHER="$HOME/.local/share/applications/appimagekit-Etcher.desktop"

# First, remove previous Etcher version if already installed

if [ -d /opt/Etcher ]; then
  sudo rm -fr /opt/Etcher/
fi

if [ -f $LAUNCHER ]; then
  rm $LAUNCHER
fi

# Installs Etcher

echo "Default Etcher version is 1.1.2:"
echo ""
echo "https://github.com/resin-io/etcher/releases/download/v1.1.2/etcher-1.1.2-linux-x86_64.zip"
echo ""

if ask "Do you want to install Etcher default version 1.1.2 ?"; then
    ETCHER_FILE="https://github.com/resin-io/etcher/releases/download/v1.1.2/etcher-1.1.2-linux-x86_64.zip"
else
    echo "If there is a newer version, please input the new download link (copy/paste from web browser)"
    read -n 1 -s -p "Etcher zipped file link: " ETCHER_FILE
fi

# cleaning tmp
#
[ -f /tmp/etcher.zip ] && rm /tmp/etcher.zip

# if there is no folder then make one
#
[ -d /opt/Etcher ] || sudo mkdir -p /opt/Etcher

wget $ETCHER_FILE -O /tmp/etcher.zip

if [ -z "$(ls -A /opt/Etcher)" ]; then
   sudo unzip -o /tmp/etcher.zip -d /opt/Etcher
else
   sudo rm /opt/Etcher/*
   sudo unzip -o /tmp/etcher.zip -d /opt/Etcher
fi

# Create launcher file for Etcher if not exists
#
EXE_FILE=$(eval "ls /opt/Etcher")

if [ ! -f $LAUNCHER ]; then

  touch $LAUNCHER
  echo "[Desktop Entry]" > $LAUNCHER
  echo "Name=Etcher" >> $LAUNCHER
  echo 'Exec="/opt/Etcher/'$EXE_FILE'" %U' >> $LAUNCHER
  echo "Comment=Flash OS images to SD cards & USB drives, safely and easily." >> $LAUNCHER
  echo "Icon=etcher" >> $LAUNCHER
  echo "Type=Application" >> $LAUNCHER
  echo "X-Desktop-File-Install-Version=0.22" >> $LAUNCHER
  echo "X-AppImage-Comment=Generated by ./bin/etcher.wrapper" >> $LAUNCHER
  echo "TryExec=/opt/Etcher/$EXE_FILE" >> $LAUNCHER

  chmod +x $LAUNCHER

fi

rm /tmp/etcher.zip

###################################################################

echo ""
echo "################################################################"
echo "# etcher installed                                             #"
echo "################################################################"

